name: Python application

on: [push]
  

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        postgres-version: [14.9, 15]

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies and config
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install codacy-coverage
        cp decide/local_settings.gactions.py decide/local_settings.py
    - name: Run migrations (unnecessary)
      run: |
        cd decide
        python manage.py migrate
    - name: Run tests
      run: |
        cd decide
        coverage run --branch --source=. ./manage.py test  --keepdb 
        coverage xml 

  cobertura:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: decide/coverage.xml

  releases:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up GitHub CLI
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Create a release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "$(date +'%Y-%m-%d_%H-%M-%S')" --title "Release $(date +'%Y-%m-%d')" --notes "Automated release from CI/CD"

